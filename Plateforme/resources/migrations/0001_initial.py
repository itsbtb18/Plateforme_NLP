# Generated by Django 5.1.7 on 2025-10-03 16:17

import django.db.models.deletion
import resources.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('institutions', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Corpus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Descriptive title of the resource', max_length=200, verbose_name='Title')),
                ('description', models.TextField(help_text='Detailed description of the resource', verbose_name='Description')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('access_link', models.URLField(blank=True, null=True, verbose_name='Access Link')),
                ('keywords', models.CharField(blank=True, max_length=255, null=True, verbose_name='Keywords')),
                ('update_date', models.DateTimeField(blank=True, help_text='Last time this resource was updated', null=True, verbose_name='Update Date')),
                ('language', models.CharField(choices=[('ar', 'Arabic'), ('en', 'English')], default='ar', max_length=10, verbose_name='Language')),
                ('views_count', models.PositiveIntegerField(default=0, verbose_name='Views Count')),
                ('size', models.IntegerField(help_text='Size in number of words or documents', verbose_name='Corpus Size')),
                ('field', models.CharField(choices=[('computer_science', 'Computer Science'), ('linguistics', 'Linguistics'), ('ai', 'Artificial Intelligence'), ('nlp', 'Natural Language Processing'), ('ml', 'Machine Learning'), ('data_science', 'Data Science'), ('comp_linguistics', 'Computational Linguistics'), ('speech_processing', 'Speech Processing'), ('text_mining', 'Text Mining'), ('ir', 'Information Retrieval'), ('arabic_linguistics', 'Arabic Linguistics'), ('morphology', 'Morphology'), ('syntax', 'Syntax'), ('semantics', 'Semantics'), ('translation', 'Translation'), ('sentiment_analysis', 'Sentiment Analysis'), ('named_entity', 'Named Entity Recognition'), ('text_classification', 'Text Classification'), ('digital_humanities', 'Digital Humanities'), ('corpus_linguistics', 'Corpus Linguistics'), ('documentation', 'Documentation'), ('other', 'Other')], default='other', help_text='Main field of the corpus', max_length=50, verbose_name='Field of Study')),
                ('file_format', models.CharField(help_text='Format of the corpus (e.g., TXT, CSV, JSON)', max_length=10, verbose_name='Format')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'db_table': 'resources_corpus',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Descriptive title of the resource', max_length=200, verbose_name='Title')),
                ('description', models.TextField(help_text='Detailed description of the resource', verbose_name='Description')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('access_link', models.URLField(blank=True, null=True, verbose_name='Access Link')),
                ('keywords', models.CharField(blank=True, max_length=255, null=True, verbose_name='Keywords')),
                ('update_date', models.DateTimeField(blank=True, help_text='Last time this resource was updated', null=True, verbose_name='Update Date')),
                ('language', models.CharField(choices=[('ar', 'Arabic'), ('en', 'English')], default='ar', max_length=10, verbose_name='Language')),
                ('views_count', models.PositiveIntegerField(default=0, verbose_name='Views Count')),
                ('document_type', models.CharField(choices=[('article', 'Article'), ('thesis', 'Thesis'), ('memoir', 'Memoir')], max_length=20, verbose_name='Document Type')),
                ('file_format', models.CharField(help_text='PDF, DOCX, TXT, etc.', max_length=10, verbose_name='Format')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('authors', models.ManyToManyField(blank=True, related_name='documents', to=settings.AUTH_USER_MODEL, verbose_name='Auteurs')),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('doi', models.CharField(blank=True, help_text='Digital Object Identifier (e.g., 10.1234/abcd)', max_length=100, verbose_name='DOI')),
                ('journal', models.CharField(max_length=200, verbose_name='Journal')),
                ('publication_date', models.DateField(blank=True, null=True, verbose_name='Publication Date')),
                ('document', models.OneToOneField(limit_choices_to={'document_type': 'article'}, on_delete=django.db.models.deletion.CASCADE, related_name='article', to='resources.document')),
            ],
            options={
                'verbose_name': 'article',
                'verbose_name_plural': 'Scientific Articles',
            },
        ),
        migrations.CreateModel(
            name='Memoir',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('academic_level', models.CharField(choices=[('bachelor', 'Bachelor'), ('master', 'Master'), ('doctorate', 'Doctorate')], max_length=50, verbose_name='Academic Level')),
                ('defense_year', models.IntegerField(verbose_name='Defense Year')),
                ('document', models.OneToOneField(limit_choices_to={'document_type': 'memoir'}, on_delete=django.db.models.deletion.CASCADE, related_name='memoir', to='resources.document')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='institutions.institution', verbose_name='Institution')),
            ],
            options={
                'verbose_name': 'memoir',
                'verbose_name_plural': 'Memoirs',
            },
        ),
        migrations.CreateModel(
            name='NLPTool',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Descriptive title of the resource', max_length=200, verbose_name='Title')),
                ('description', models.TextField(help_text='Detailed description of the resource', verbose_name='Description')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('access_link', models.URLField(blank=True, null=True, verbose_name='Access Link')),
                ('keywords', models.CharField(blank=True, max_length=255, null=True, verbose_name='Keywords')),
                ('update_date', models.DateTimeField(blank=True, help_text='Last time this resource was updated', null=True, verbose_name='Update Date')),
                ('language', models.CharField(choices=[('ar', 'Arabic'), ('en', 'English')], default='ar', max_length=10, verbose_name='Language')),
                ('views_count', models.PositiveIntegerField(default=0, verbose_name='Views Count')),
                ('tool_type', models.CharField(choices=[('tokenization', 'Tokenization'), ('stemming', 'Stemming'), ('ner', 'Named Entity Recognition'), ('pos_tagging', 'Part-of-Speech Tagging'), ('sentiment_analysis', 'Sentiment Analysis'), ('machine_translation', 'Machine Translation')], help_text='Type of NLP tool', max_length=50, verbose_name='Tool Type')),
                ('version', models.CharField(help_text='Tool version (e.g., 1.0.0)', max_length=20, verbose_name='Version')),
                ('documentation_link', models.URLField(blank=True, help_text='URL of the official documentation', null=True, verbose_name='Documentation Link')),
                ('last_updated', models.DateField(auto_now=True, verbose_name='Last Updated')),
                ('supported_languages', models.CharField(choices=[('ar', 'Arabic'), ('en', 'English'), ('fr', 'French'), ('es', 'Spanish')], default='ar', help_text='Languages that this tool can process', max_length=255, verbose_name='Supported Languages')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'verbose_name': 'NLP Tool',
                'verbose_name_plural': 'NLP Tools',
                'ordering': ['-creation_date'],
            },
        ),
        migrations.CreateModel(
            name='Thesis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('supervisor', models.CharField(max_length=100, verbose_name='Thesis Supervisor')),
                ('defense_year', models.IntegerField(verbose_name='Defense Year')),
                ('document', models.OneToOneField(limit_choices_to={'document_type': 'thesis'}, on_delete=django.db.models.deletion.CASCADE, related_name='thesis', to='resources.document')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='institutions.institution', verbose_name='Institution')),
            ],
            options={
                'verbose_name': 'thesis',
                'verbose_name_plural': 'Theses',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Descriptive title of the resource', max_length=200, verbose_name='Title')),
                ('description', models.TextField(help_text='Detailed description of the resource', verbose_name='Description')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('access_link', models.URLField(blank=True, null=True, verbose_name='Access Link')),
                ('keywords', models.CharField(blank=True, max_length=255, null=True, verbose_name='Keywords')),
                ('update_date', models.DateTimeField(blank=True, help_text='Last time this resource was updated', null=True, verbose_name='Update Date')),
                ('language', models.CharField(choices=[('ar', 'Arabic'), ('en', 'English')], default='ar', max_length=10, verbose_name='Language')),
                ('views_count', models.PositiveIntegerField(default=0, verbose_name='Views Count')),
                ('field', models.CharField(choices=[('computer_science', 'Computer Science'), ('linguistics', 'Linguistics'), ('ai', 'Artificial Intelligence'), ('nlp', 'Natural Language Processing'), ('ml', 'Machine Learning'), ('data_science', 'Data Science'), ('comp_linguistics', 'Computational Linguistics'), ('speech_processing', 'Speech Processing'), ('text_mining', 'Text Mining'), ('ir', 'Information Retrieval'), ('arabic_linguistics', 'Arabic Linguistics'), ('morphology', 'Morphology'), ('syntax', 'Syntax'), ('semantics', 'Semantics'), ('translation', 'Translation'), ('sentiment_analysis', 'Sentiment Analysis'), ('named_entity', 'Named Entity Recognition'), ('text_classification', 'Text Classification'), ('digital_humanities', 'Digital Humanities'), ('corpus_linguistics', 'Corpus Linguistics'), ('documentation', 'Documentation'), ('other', 'Other')], default='other', help_text='Primary field of the course', max_length=50, verbose_name='Field of Study')),
                ('academic_level', models.CharField(choices=[('bachelor', 'Bachelor'), ('master', 'Master'), ('doctorate', 'Doctorate')], help_text='Required level of study', max_length=20, verbose_name='Academic Level')),
                ('academic_year', models.CharField(help_text='Format: 2023-2024', max_length=9, validators=[resources.models.validate_academic_year], verbose_name='Academic Year')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('institution', models.ForeignKey(help_text='University or school offering the course', on_delete=django.db.models.deletion.CASCADE, to='institutions.institution', verbose_name='Institution')),
                ('teacher', models.ForeignKey(help_text='Full name of the teacher', on_delete=django.db.models.deletion.CASCADE, related_name='taught_courses', to=settings.AUTH_USER_MODEL, verbose_name='Responsible Teacher')),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
                'ordering': ['-academic_year', 'field'],
                'indexes': [models.Index(fields=['field', 'academic_level'], name='resources_c_field_4caad8_idx')],
            },
        ),
    ]
